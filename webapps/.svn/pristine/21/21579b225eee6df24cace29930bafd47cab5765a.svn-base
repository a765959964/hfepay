package com.hfepay.scancode.controller;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hfepay.commons.base.lang.Strings;
import com.hfepay.scancode.commons.BaseErrorMsg;
import com.hfepay.scancode.condition.MerchantInfoCondition;
import com.hfepay.scancode.condition.MerchantStoreCondition;
import com.hfepay.scancode.entity.ChannelAdmin;
import com.hfepay.scancode.entity.MerchantInfo;
import com.hfepay.scancode.entity.MerchantStore;
import com.hfepay.scancode.service.channel.ChannelAdminService;
import com.hfepay.scancode.service.operator.MerchantInfoService;
import com.hfepay.scancode.service.operator.MerchantStoreService;

/**
 * 商户入驻三部曲
 * @author husain
 *
 */
@Controller
@RequestMapping("/scancode")
public class ScanCodeMerchantInController {
	public static final Logger log = LoggerFactory.getLogger(ScanCodeMerchantInController.class);
	
	@Autowired
	private MerchantInfoService merchantInfoService;
	@Autowired
	private ChannelAdminService channelAdminService;
	@Autowired
	private MerchantStoreService merchantStoreService;
	
	/**入驻第一步页面**/
	@RequestMapping("/apply1")
	public String apply1(ModelMap model,HttpServletRequest request){
		return "scancode/wechat/apply1";
	}
	/**入驻第二步页面**/
	@RequestMapping("/apply2")
	public String apply2(ModelMap model,HttpServletRequest request){
		ChannelAdmin channelAdmin = (ChannelAdmin)request.getSession().getAttribute("currentUser");
		MerchantInfo info = merchantInfoService.findByMerchantNo(channelAdmin.getMerchantNo());
		if(info==null || Strings.isEmpty(info.getName())){
			return "redirect:/scancode/apply1";
		}
		
		return "scancode/wechat/apply2";
	}
	/**入驻第三步页面**/
	@RequestMapping("/apply3")
	public String apply3(ModelMap model,HttpServletRequest request){
		ChannelAdmin channelAdmin = (ChannelAdmin)request.getSession().getAttribute("currentUser");
		MerchantInfo info = merchantInfoService.findByMerchantNo(channelAdmin.getMerchantNo());
		if(info==null || Strings.isEmpty(info.getBusType())){
			return "redirect:/scancode/apply2";
		}
		return "scancode/wechat/apply3";
	}
	
	/**资料填写第一步**/
	@RequestMapping("/apply/step1")
	@ResponseBody
	public BaseErrorMsg step1(ModelMap model,MerchantInfoCondition condition,String validateCode,HttpServletRequest request){
		boolean flag = channelAdminService.validateRedisValidateCode(condition.getPhone(), validateCode);
		if(!flag){
			log.info("-------------验证码错误------------");
			return new BaseErrorMsg("验证码错误");
		}
		
		ChannelAdmin channelAdmin = (ChannelAdmin)request.getSession().getAttribute("currentUser");
		condition.setMerchantNo(channelAdmin.getMerchantNo());
		long result = merchantInfoService.updateByMerchantNo(condition);
		if(result<1){
			return new BaseErrorMsg("入驻信息录入失败");
		}
		return new BaseErrorMsg("0", "入驻信息录入成功");
	}
	
	/**资料填写第二步**/
	@RequestMapping("/apply/step2")
	@ResponseBody
	public BaseErrorMsg step2(ModelMap model,MerchantInfoCondition condition,HttpServletRequest request){
		ChannelAdmin channelAdmin = (ChannelAdmin)request.getSession().getAttribute("currentUser");
		condition.setMerchantNo(channelAdmin.getMerchantNo());
		long result = merchantInfoService.updateByMerchantNo(condition);
		if(result<1){
			return new BaseErrorMsg("入驻信息录入失败");
		}
		return new BaseErrorMsg("0", "入驻信息录入成功");
	}
	
	/**资料填写第三步**/	
	@RequestMapping("/apply/step3")
	@ResponseBody
	public BaseErrorMsg step3(ModelMap model,MerchantStoreCondition condition,HttpServletRequest request){
		ChannelAdmin channelAdmin = (ChannelAdmin)request.getSession().getAttribute("currentUser");
		condition.setMerchantNo(channelAdmin.getMerchantNo());
		long result = merchantStoreService.applyStoreStep3(condition);//licence图片
		if(result<1){
			return new BaseErrorMsg("入驻信息录入失败");
		}
		return new BaseErrorMsg("0", "入驻信息录入成功");
	}
	
	/**审核进度**/
	@RequestMapping("/progress")
	public String progress(ModelMap model,HttpServletRequest request){
		ChannelAdmin channelAdmin = (ChannelAdmin)request.getSession().getAttribute("currentUser");
		MerchantInfo info = merchantInfoService.findByMerchantNo(channelAdmin.getMerchantNo());
		MerchantStore merchantStore = merchantStoreService.findByMerchantNo(channelAdmin.getMerchantNo());
		request.setAttribute("basic", info.getStatus());
		request.setAttribute("shop", merchantStore.getStoreStatus());//不通过
		request.setAttribute("identity", info.getStatus());//审核中
		return "scancode/wechat/progress";
	}
	
}
