/*
 * Powered By [华付通]
 * Web Site: http://www.huaepay.com/
 * Since 2016 - 2016
 */
package com.hfepay.scancode.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.hfepay.common.web.controller.BaseController;
import com.hfepay.commons.base.collection.Maps;
import com.hfepay.commons.base.lang.Strings;
import com.hfepay.scancode.commons.Constants;
import com.hfepay.scancode.condition.ChannelBankcardCondition;
import com.hfepay.scancode.condition.ChannelBaseCondition;
import com.hfepay.scancode.condition.ChannelExpandCondition;
import com.hfepay.scancode.condition.DataNodeCondition;
import com.hfepay.scancode.entity.Admin;
import com.hfepay.scancode.entity.ChannelBase;
import com.hfepay.scancode.entity.ChannelExpand;
import com.hfepay.scancode.service.channel.DataNodeService;
import com.hfepay.scancode.service.operator.ChannelBankcardService;
import com.hfepay.scancode.service.operator.ChannelBaseService;
import com.hfepay.scancode.service.operator.ChannelExpandService;

import net.sf.json.JSON;
import net.sf.json.JSONSerializer;

@Controller
@RequestMapping("/adminManage/channelexpand")
public class ChannelExpandController extends BaseController{
	
	@Autowired
	private ChannelExpandService channelExpandService;
	@Autowired
	private ChannelBaseService channelBaseService;
	@Autowired
	private ChannelBankcardService channelBankcardService;
	@Autowired
	private DataNodeService dataNodeService;
	
	/**
	 * @Title: saveOrUpdateById
	 * @Description: 新增/更新
	 * @author: Ricky
	 * @param ChannelExpandCondition
	 * @return: String
	 * @date CreateDate : 2016-10-13 13:44:26
	 */
	@RequestMapping(value="/save", method= {RequestMethod.POST})
	@ResponseBody
	public JSON saveOrUpdateById(HttpServletRequest request,ModelMap model,ChannelExpandCondition channelExpandCondition) throws Exception {
		Map<Object, Object> map = new HashMap<Object, Object>();
		Admin user = (Admin) request.getSession().getAttribute("currentUser");
		channelExpandCondition.setOperator(user.getId());
		channelExpandCondition.setChannelPreCode(channelExpandCondition.getChannelPreCode().toUpperCase());//编码抬头转换大写
		try {
			if(Strings.isEmpty(channelExpandCondition.getId())){			
				channelExpandCondition.setChannelNo(channelExpandService.nextCode());
				channelExpandCondition.setIsActive(Constants.Y);
				channelExpandCondition.setCreateTime(new Date());
				channelExpandCondition.setStatus(Constants.STATUS_ACTIVE);
				
				//新增
				channelExpandService.insert(channelExpandCondition);
				ChannelBaseCondition channelBaseCondition = new ChannelBaseCondition();
				BeanUtils.copyProperties(channelExpandCondition, channelBaseCondition);
				channelBaseCondition.setRecordStatus(Constants.Y);
				channelBaseCondition.setQrTotal(0);
				channelBaseCondition.setUseTotal(0);
				channelBaseCondition.setLessTotal(0);
				channelBaseService.insert(channelBaseCondition);
				
				//插入银行账户信息
				ChannelBankcardCondition channelBankcardCondition = new ChannelBankcardCondition();
				BeanUtils.copyProperties(channelExpandCondition, channelBankcardCondition);
				channelBankcardService.insert(channelBankcardCondition);
				
				//保存渠道，存放一条关联信息到节点表。只有一条
				DataNodeCondition dCondition = new DataNodeCondition();
				dCondition.setIdentityFlag(Constants.IDENTITYFLAG_CHANNEL);//1渠道2代理商3商户：必需参数
				dCondition.setId(Strings.getUUID());
				dCondition.setParentNode("");
				dCondition.setCurrentNode(channelExpandCondition.getChannelNo());//当前节点id//必须参数
				dCondition.setCurrentNodeLevel("0");//当前节点级别：渠道是0级别
				dCondition.setOperator(Constants.OPERATOR_SYSTEM);//操作人
				
				dataNodeService.doSaveNodeRelations(dCondition);
			}else{
				channelExpandService.update(channelExpandCondition);
				ChannelBaseCondition channelBaseCondition = new ChannelBaseCondition();			
				channelExpandService.update(channelExpandCondition);		
				ChannelBase entity = channelBaseService.findByChannelNo(channelExpandCondition.getChannelNo());
				if(entity != null){
					BeanUtils.copyProperties(channelExpandCondition, channelBaseCondition);
					channelBaseCondition.setId(entity.getId());
					channelBaseService.update(channelBaseCondition);
				}			
			}
			map = Maps.mapByAarray(EXECUTE_STATUS,SUCCESS,VALUES,Constants.SUCCESS_MSG,"url","/adminManage/channelbase");
		} catch (Exception e) {
			map = Maps.mapByAarray(EXECUTE_STATUS,FAILED,VALUES,Constants.FAIL_MSG);
		}
		return JSONSerializer.toJSON(map);
	}
	
	/**
	 * @Title: show
	 * @Description: 查询单个实体
	 * @author: Ricky
	 * @param id
	 * @return: String
	 * @date CreateDate : 2016-10-13 13:44:26
	 */
	@RequestMapping(value="/{channelNo}", method= {RequestMethod.GET})
	public String show(ModelMap model,@PathVariable String channelNo) throws Exception {
		if(!"0".equalsIgnoreCase(channelNo)){
			ChannelExpand entity = channelExpandService.findByChannelNo(channelNo);
			model.addAttribute("Obj", entity);
		}
		return "admin/channel/channelexpand/edit";
	}


	/**
	 * @Title: saveOrUpdateById
	 * @Description: 状态变更
	 * @author: wh
	 * @param ChannelExpandCondition
	 * @return: JSONObject
	 * @date CreateDate : 2016-10-13 13:44:26
	 */
	@RequestMapping(value = "/updateStatus", method= {RequestMethod.POST})
	@ResponseBody
	public JSONObject updateStatus(HttpServletRequest request,ChannelExpandCondition channelExpandCondition){		
        long flag = channelExpandService.updateStatus(channelExpandCondition.getId(),channelExpandCondition.getStatus());
        JSONObject json = new JSONObject();
        if(flag == 0){
        	json.put("message", Constants.FAIL_MSG);
        	json.put("status", Constants.FAIL_STATE);
        }else{
        	json.put("message", Constants.SUCCESS_MSG);
        	json.put("status", Constants.SUCCESS_STATE);
        }
		return json;
	}
	
	/** 查看详情 */
	@RequestMapping(value="/detail/{channelNo}", method= {RequestMethod.POST})
	public String show(HttpServletRequest request,ModelMap model,@PathVariable String channelNo) throws Exception {
		ChannelExpand entity = channelExpandService.findByChannelNo(channelNo);
		model.addAttribute("item",entity);
		return "admin/channel/channelexpand/detail";
	}
	
}

