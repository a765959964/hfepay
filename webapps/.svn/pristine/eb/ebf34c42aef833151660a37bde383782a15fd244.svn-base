/*
 * Powered By [华付通]
 * Web Site: http://www.huaepay.com/
 * Since 2016 - 2016
 */
package com.hfepay.scancode.controller;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.hfepay.common.web.controller.BaseController;
import com.hfepay.commons.base.lang.Strings;
import com.hfepay.commons.utils.Pager;
import com.hfepay.commons.utils.PagingResult;
import com.hfepay.scancode.commons.Constants;
import com.hfepay.scancode.condition.MappingDicionCondition;
import com.hfepay.scancode.condition.MerchantCostCondition;
import com.hfepay.scancode.entity.MerchantCost;
import com.hfepay.scancode.service.operator.MappingDicionService;
import com.hfepay.scancode.service.operator.MerchantCostService;

@Controller
@RequestMapping("/adminManage/merchantcost")
public class MerchantCostController extends BaseController{
	
	@Autowired
	private MerchantCostService merchantCostService;
	@Autowired
	private MappingDicionService mappingDicionService;
	
	private final String LIST_ACTION = "redirect:/merchantcost";
	
	/**
	 * @Title: saveOrUpdateById
	 * @Description: 查询列表
	 * @author: Ricky
	 * @param 
	 * @return: String
	 * @date CreateDate : 2016-11-26 16:44:22
	 */
	@RequestMapping(method= {RequestMethod.GET,RequestMethod.POST})
	public String list(ModelMap model) {
		MappingDicionCondition mappingDicionCondition = new MappingDicionCondition();
		mappingDicionCondition.setKeyNo(Constants.PAYWAY_CODE);
		model.addAttribute("mappingDicionList", mappingDicionService.findAll(mappingDicionCondition));
		return "admin/merchantcost/list";
	}
	
	/**
	 * @Title: listContent
	 * @Description: 列表查询
	 * @author: Ricky
	 * @param MerchantCostCondition
	 * @return: String
	 * @date CreateDate : 2016-11-26 16:44:22
	 */
	@RequestMapping(value = "/content", method= {RequestMethod.POST})
	public String listContent(ModelMap model,MerchantCostCondition merchantCostCondition){		
		PagingResult<MerchantCost> page = merchantCostService.findPagingResult(merchantCostCondition);
		Pager<MerchantCost> pager = new Pager<MerchantCost>();
		pager.setPageNo(merchantCostCondition.getPageNo());
		pager.setPageSize(merchantCostCondition.getPageSize());
		pager.setResult(page.getResult());
		pager.setTotalCount(page.getTotalCount());
 		if(pager.getOrder() == null){
			pager.setOrder("");
		}
		model.addAttribute("pager",pager);
		model.addAttribute("amtStatic",this.getAmtStatic(merchantCostService.findAll(merchantCostCondition)));
		return "admin/merchantcost/listContent";
	}
	
	/** 金额统计 */
	private Map<String, BigDecimal> getAmtStatic(List<MerchantCost> merchantCosts){
		return merchantCostService.getAmtStatic(merchantCosts);
	}
	

	/**
	 * @Title: list
	 * @Description: 列表查询，无分页
	 * @author: Ricky
	 * @param MerchantCostCondition
	 * @return: JSONObject
	 * @date CreateDate : 2016-11-26 16:44:22
	 */
	@RequestMapping(value="/list",method=RequestMethod.POST)
	@ResponseBody
	public JSONObject list(HttpServletRequest request,MerchantCostCondition merchantCostCondition){		
        List<MerchantCost> list = merchantCostService.findAll(merchantCostCondition);
        JSONObject json = new JSONObject();
        json.put("objList", list);
		return json;
	}
	

	/**
	 * @Title: saveOrUpdateById
	 * @Description: 新增/更新
	 * @author: Ricky
	 * @param MerchantCostCondition
	 * @return: String
	 * @date CreateDate : 2016-11-26 16:44:22
	 */
	@RequestMapping(value="/save", method= {RequestMethod.POST})
	public String saveOrUpdateById(ModelMap model,MerchantCostCondition merchantCostCondition) throws Exception {
		long flag = 0;
		if(Strings.isEmpty(merchantCostCondition.getId())){
			//新增
			flag = merchantCostService.insert(merchantCostCondition);
		}else{
			flag = merchantCostService.update(merchantCostCondition);
		}
        
        if(flag > 0){
        	return LIST_ACTION;
        }
		return "admin/merchantcost/edit";
	}
	
	/**
	 * @Title: show
	 * @Description: 查询单个实体
	 * @author: Ricky
	 * @param id
	 * @return: String
	 * @date CreateDate : 2016-11-26 16:44:22
	 */
	@RequestMapping(value="/{id}", method= {RequestMethod.GET})
	public String show(ModelMap model,@PathVariable String id) throws Exception {
		if(!"0".equalsIgnoreCase(id)){
			MerchantCost entity = merchantCostService.findById(id);
			 model.addAttribute("Obj", entity);
		}
		return "admin/merchantcost/edit";
	}
	
	/**
	 * @Title: saveOrUpdateById
	 * @Description: 删除
	 * @author: Ricky
	 * @param MerchantCostCondition
	 * @return: JSONObject
	 * @date CreateDate : 2016-11-26 16:44:22
	 */
	@RequestMapping(value="/del",method=RequestMethod.POST)
	@ResponseBody
	public JSONObject del(HttpServletRequest request,MerchantCostCondition merchantCostCondition){		
        long flag = merchantCostService.deleteById(merchantCostCondition.getId());
        JSONObject json = new JSONObject();
        if(flag == 0){
        	json.put("message", Constants.FAIL_MSG);
        	json.put("status", Constants.FAIL_STATE);
        }else{
        	json.put("message", Constants.SUCCESS_MSG);
        	json.put("status", Constants.SUCCESS_STATE);
        }
		return json;
	}
	


	/**
	 * @Title: saveOrUpdateById
	 * @Description: 状态变更
	 * @author: wh
	 * @param MerchantCostCondition
	 * @return: JSONObject
	 * @date CreateDate : 2016-11-26 16:44:22
	 */
	@RequestMapping(value = "/updateStatus", method= {RequestMethod.POST})
	@ResponseBody
	public JSONObject updateStatus(HttpServletRequest request,MerchantCostCondition merchantCostCondition){		
        long flag = merchantCostService.updateStatus(merchantCostCondition.getId(),merchantCostCondition.getStatus());
        JSONObject json = new JSONObject();
        if(flag == 0){
        	json.put("message", Constants.FAIL_MSG);
        	json.put("status", Constants.FAIL_STATE);
        }else{
        	json.put("message", Constants.SUCCESS_MSG);
        	json.put("status", Constants.SUCCESS_STATE);
        }
		return json;
	}	
	
	/** 查看详情 */
	@RequestMapping(value="/detail/{id}", method= {RequestMethod.POST})
	public String show(HttpServletRequest request,ModelMap model,@PathVariable String id) throws Exception {
		MerchantCost entity = merchantCostService.findById(id);
		model.addAttribute("item",entity);
		return "admin/merchantcost/detail";
	}
	
}

