package com.hfepay.scancode.controller;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hfepay.commons.base.lang.Dates;
import com.hfepay.commons.base.lang.Dates.DF;
import com.hfepay.commons.utils.Pager;
import com.hfepay.commons.utils.PagingResult;
import com.hfepay.scancode.condition.OrderPayCondition;
import com.hfepay.scancode.entity.ChannelAdmin;
import com.hfepay.scancode.entity.OrderPay;
import com.hfepay.scancode.enumeration.DateFlagEnu;
import com.hfepay.scancode.service.order.OrderPayService;

/**
 * 账单查询
 * @author husain
 *
 */
@Controller
@RequestMapping("/scancode")
public class BillController {
	public static final Logger log = LoggerFactory.getLogger(BillController.class);
	
	@Autowired
	private OrderPayService orderPayService;
	
	@RequestMapping("/bill")
	public String bill(ModelMap model,HttpServletRequest request){
		String  month = Dates.format("yyyy年MM月", new Date());
		String date = Dates.format(DF.yyyy_MM_dd, new Date());
		request.setAttribute("month", month);
		BigDecimal total = orderPayService.getTotalMoney(date,DateFlagEnu.MONTH.getCode());//按月统计交易金额
		request.setAttribute("total", total);
		return "scancode/wechat/bill";
	}
	
	/**
	 * 列表显示
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/billContent", method= {RequestMethod.POST})
	@ResponseBody
	public Pager<OrderPay> listContent(HttpServletRequest request,ModelMap model,OrderPayCondition orderPayCondition){
		ChannelAdmin admin = (ChannelAdmin) request.getSession().getAttribute("currentUser");
		orderPayCondition.setMerchantNo(admin.getMerchantNo());
		orderPayCondition.setPageSize(5);
		PagingResult<OrderPay> page = orderPayService.findPagingResult(orderPayCondition);
		Pager<OrderPay> pager = new Pager<OrderPay>();
		pager.setPageNo(orderPayCondition.getPageNo());
		pager.setPageSize(orderPayCondition.getPageSize());
		pager.setResult(page.getResult());
		pager.setTotalCount(page.getTotalCount());
		int totalPages = (int)(page.getTotalCount()%5==0?page.getTotalCount()/5:page.getTotalCount()/5+1);
		pager.setTotalPages(totalPages);
 		if(pager.getOrder() == null){
			pager.setOrder("");
		}
		return pager;
	}
}
