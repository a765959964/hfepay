/*
 * Powered By [华付通]
 * Web Site: http://www.huaepay.com/
 * Since 2016 - 2016
 */
package com.hfepay.scancode.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSON;
import net.sf.json.JSONSerializer;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.hfepay.common.web.controller.BaseController;
import com.hfepay.commons.base.collection.Maps;
import com.hfepay.commons.base.lang.Strings;
import com.hfepay.commons.utils.Pager;
import com.hfepay.commons.utils.PagingResult;
import com.hfepay.scancode.api.entity.vo.MerchantUpdateCardVo;
import com.hfepay.scancode.api.service.MerchantBusinessService;
import com.hfepay.scancode.commons.Constants;
import com.hfepay.scancode.condition.AuditLogCondition;
import com.hfepay.scancode.condition.MerchantBankcardCondition;
import com.hfepay.scancode.entity.Admin;
import com.hfepay.scancode.entity.AuditLog;
import com.hfepay.scancode.entity.MerchantBankcard;
import com.hfepay.scancode.service.operator.AuditLogService;
import com.hfepay.scancode.service.operator.MerchantBankcardService;

@Controller
@RequestMapping("/adminManage/auditlog")
public class AuditLogController extends BaseController{
	
	@Autowired
	private AuditLogService auditLogService;
	@Autowired
	private MerchantBankcardService merchantBankcardService;
	@Autowired
	private MerchantBusinessService merchantBusinessService;
	
	/** 列表 */
	@RequestMapping(value = "/bankList",method= {RequestMethod.GET})
	public String bankList(HttpServletRequest request) {
		return "admin/merchantaudit/list";
	}
	
	/**
	 * 列表显示 //显示提取审核中的数据
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/bankContent", method= {RequestMethod.POST})
	public String bankListContent(HttpServletRequest request,ModelMap model,MerchantBankcardCondition merchantBankcardCondition){	
		merchantBankcardCondition.setStatus("3");//查询审核中的数据
		PagingResult<MerchantBankcard> page = merchantBankcardService.findPagingResult(merchantBankcardCondition);
		Pager<MerchantBankcard> pager = new Pager<MerchantBankcard>();
		pager.setPageNo(merchantBankcardCondition.getPageNo());
		pager.setPageSize(merchantBankcardCondition.getPageSize());
		pager.setResult(page.getResult());
		pager.setTotalCount(page.getTotalCount());
 		if(pager.getOrder() == null){
			pager.setOrder("");
		}
		model.addAttribute("pager",pager);
		return "admin/merchantaudit/listContent";
	}
	
	/** 列表 */
	@RequestMapping(method= {RequestMethod.GET,RequestMethod.POST})
	public String list(HttpServletRequest request) {
		return "admin/auditlog/list";
	}
	
	/**
	 * 列表显示  
	 * @param request
	 * @return
	 */
	@RequestMapping(value = "/content", method= {RequestMethod.POST})
	public String listContent(HttpServletRequest request,ModelMap model,AuditLogCondition auditLogCondition){		
		PagingResult<AuditLog> page = auditLogService.findPagingResult(auditLogCondition);
		Pager<AuditLog> pager = new Pager<AuditLog>();
		pager.setPageNo(auditLogCondition.getPageNo());
		pager.setPageSize(auditLogCondition.getPageSize());
		pager.setResult(page.getResult());
		pager.setTotalCount(page.getTotalCount());
 		if(pager.getOrder() == null){
			pager.setOrder("");
		}
		model.addAttribute("pager",pager);
		return "admin/auditlog/listContent";
	}
	
	/** 列表无分页 */
	@RequestMapping(value="/list",method=RequestMethod.POST)
	@ResponseBody
	public JSONObject list(HttpServletRequest request,AuditLogCondition auditLogCondition){		
        List<AuditLog> list = auditLogService.findAll(auditLogCondition);
        JSONObject json = new JSONObject();
        json.put("objList", list);
		return json;
	}
	
	/** 进入结算审核新增页面/更新 */
	@RequestMapping(value="id/{id}", method= {RequestMethod.POST})
	public String addShow(ModelMap model,@PathVariable String id) throws Exception {
		model.addAttribute("id", id);
		return "admin/merchantaudit/edit";
	}
	
	
	/** 进入新增/更新 */
	@RequestMapping(value="/{id}", method= {RequestMethod.GET})
	public String show(ModelMap model,@PathVariable String id) throws Exception {
		if(!"0".equalsIgnoreCase(id)){
			AuditLog entity = auditLogService.findById(id);
			 model.addAttribute("Obj", entity);
		}
		return "admin/auditlog/edit";
	}

	/** 新增/更新 */
	@RequestMapping(value="/save", method= {RequestMethod.POST})
	public String _new(HttpServletRequest request,ModelMap model,AuditLogCondition auditLogCondition) throws Exception {
		MerchantBankcard merchantBankcard = merchantBankcardService.findById(auditLogCondition.getId());
		Admin user = (Admin) request.getSession().getAttribute("currentUser");
		auditLogCondition.setOperator(user.getId());
		MerchantBankcardCondition merchantBankcardCondition =new MerchantBankcardCondition();
		merchantBankcardCondition.setId(auditLogCondition.getId());
		auditLogCondition.setOperator(user.getId());
		try {
			//通过审核，修改银行账户表字段
			if(("0").equals(auditLogCondition.getAuditStatus())){
				merchantBankcardCondition.setStatus("1");
				merchantBankcardCondition.setUpdateTime(new Date());
				//审核通过，调用银行帐号变更接口
				MerchantUpdateCardVo merchantUpdateCardVo =new MerchantUpdateCardVo();
				merchantUpdateCardVo.setMerchantNo(merchantBankcard.getMerchantNo());
				merchantUpdateCardVo.setMobile(merchantBankcard.getMobile());
				merchantUpdateCardVo.setNewBankCode(merchantBankcard.getBankCode());
				merchantUpdateCardVo.setNewBankCard(merchantBankcard.getBankCard());
				merchantUpdateCardVo.setNewBankName(merchantBankcard.getBankName());
				merchantUpdateCardVo.setReturnURL("");
				merchantBusinessService.merchantUpdateCard(merchantUpdateCardVo);
			}else{
				//不通过，则
				merchantBankcardCondition.setStatus("4");
				merchantBankcardCondition.setUpdateTime(new Date());
			}
			merchantBankcardService.update(merchantBankcardCondition);
			//通过不通过，新增审核信息表数据
			//新增
			auditLogCondition.setCreateTime(new Date());
			auditLogCondition.setAuditId(auditLogCondition.getId());
			auditLogCondition.setAuditType("1");//银行账户变更
			auditLogCondition.setMerchantNo(merchantBankcard.getMerchantNo());
			auditLogCondition.setId(Strings.getUUID());
			auditLogService.insert(auditLogCondition);
		  }catch (Exception e) {
			
		}
		return "admin/merchantaudit/list";
	}
	
	/** 删除 */
	@RequestMapping(value="/del",method=RequestMethod.POST)
	@ResponseBody
	public JSON del(HttpServletRequest request,AuditLogCondition auditLogCondition){		
		Admin user = (Admin) request.getSession().getAttribute("currentUser");
		auditLogCondition.setOperator(user.getId());
//		auditLogCondition.setRecordStatus(Constants.N);
//		auditLogCondition.setUpdateTime(new Date());
        Map<Object, Object> map = new HashMap<Object, Object>();
		try {
			auditLogService.update(auditLogCondition);
			map = Maps.mapByAarray(EXECUTE_STATUS,SUCCESS,VALUES,Constants.SUCCESS_MSG);
		} catch (Exception e) {
			map = Maps.mapByAarray(EXECUTE_STATUS,FAILED,VALUES,Constants.FAIL_MSG);
		}
		return JSONSerializer.toJSON(map);
	}
	
	
	/** 查看详情 */
	@RequestMapping(value="/detail/{id}", method= {RequestMethod.POST})
	public String show(HttpServletRequest request,ModelMap model,@PathVariable String id) throws Exception {
		AuditLog entity = auditLogService.findById(id);
		model.addAttribute("item",entity);
		return "admin/auditlog/detail";
	}
}

