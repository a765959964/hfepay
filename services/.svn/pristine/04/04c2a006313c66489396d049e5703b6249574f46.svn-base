package com.hfepay.scancode.service.operator.impl;

/*
 * Powered By [华付通]
 * Web Site: http://www.huaepay.com/
 * Since 2016 - 2016
 */

import java.util.List;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hfepay.commons.criteria.Criteria;
import com.hfepay.commons.base.lang.Strings;
import com.hfepay.commons.criteria.Cnd;
import com.hfepay.commons.criteria.CriteriaBuilder;
import com.hfepay.commons.criteria.Order;
import com.hfepay.commons.utils.PagingResult;
import com.hfepay.scancode.dao.PlatformQrcodeDAO;
import com.hfepay.scancode.entity.PlatformQrcode;
import com.hfepay.scancode.service.operator.PlatformQrcodeService;
import com.hfepay.scancode.condition.PlatformQrcodeCondition;

@Service("platformQrcodeService")
public class PlatformQrcodeServiceImpl implements PlatformQrcodeService {
	
	@Autowired
    private PlatformQrcodeDAO platformQrcodeDAO;
    
    /**
	 * 列表(分页)
	 * @param platformQrcodeCondition 
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
    @Override
	public PagingResult<PlatformQrcode> findPagingResult(PlatformQrcodeCondition platformQrcodeCondition){
		CriteriaBuilder cb = Cnd.builder(PlatformQrcode.class);
		if(!Strings.isEmpty(platformQrcodeCondition.getId())){
			cb.andEQ("id", platformQrcodeCondition.getId());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getQrCode())){
			cb.andEQ("qrCode", platformQrcodeCondition.getQrCode());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getChannelNo())){
			cb.andEQ("channelNo", platformQrcodeCondition.getChannelNo());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getChannelName())){
			cb.andEQ("channelName", platformQrcodeCondition.getChannelName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getAgentNo())){
			cb.andEQ("agentNo", platformQrcodeCondition.getAgentNo());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getAgentName())){
			cb.andEQ("agentName", platformQrcodeCondition.getAgentName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getMerchantNo())){
			cb.andEQ("merchantNo", platformQrcodeCondition.getMerchantNo());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getMerchantName())){
			cb.andEQ("merchantName", platformQrcodeCondition.getMerchantName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getQrName())){
			cb.andEQ("qrName", platformQrcodeCondition.getQrName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getImage())){
			cb.andEQ("image", platformQrcodeCondition.getImage());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getQrDesc())){
			cb.andEQ("qrDesc", platformQrcodeCondition.getQrDesc());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getStoreId())){
			cb.andEQ("storeId", platformQrcodeCondition.getStoreId());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getStoreName())){
			cb.andEQ("storeName", platformQrcodeCondition.getStoreName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getQrStatus())){
			cb.andEQ("qrStatus", platformQrcodeCondition.getQrStatus());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getRecordStatus())){
			cb.andEQ("recordStatus", platformQrcodeCondition.getRecordStatus());
		}
		if(null != platformQrcodeCondition.getCreateTime()){
			cb.andEQ("createTime", platformQrcodeCondition.getCreateTime());
		}

		if(!Strings.isEmpty(platformQrcodeCondition.getOperator())){
			cb.andEQ("operator", platformQrcodeCondition.getOperator());
		}

		if(!Strings.isEmpty(platformQrcodeCondition.getRemark())){
			cb.andLike("remark", platformQrcodeCondition.getRemark());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getTemp1())){
			cb.andEQ("temp1", platformQrcodeCondition.getTemp1());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getTemp2())){
			cb.andEQ("temp2", platformQrcodeCondition.getTemp2());
		}
		cb.orderBy("createTime", Order.DESC);
		//排序
		if(!Strings.isEmpty(platformQrcodeCondition.getOrderBy())){
			if(platformQrcodeCondition.getOrderBy().indexOf(",")>0){
				String[] orderBys = platformQrcodeCondition.getOrderBy().split(",");
				String[] orders = platformQrcodeCondition.getOrder().split(",");
				for(int i=0; i<orderBys.length && i<orders.length; i++){
					cb.orderBy(orderBys[i], Order.valueOf(orders[i]));
				}
			}else{
				cb.orderBy(platformQrcodeCondition.getOrderBy(), Order.valueOf(platformQrcodeCondition.getOrder()));
			}
		}
		Criteria buildCriteria = cb.buildCriteria();
		buildCriteria.limit(Long.valueOf(platformQrcodeCondition.getFirst()), Long.valueOf(platformQrcodeCondition.getLast()));
		return platformQrcodeDAO.findPagingResult(buildCriteria);
	}
	
	/**
	 * 列表
	 * @param platformQrcode 
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public List<PlatformQrcode> findAll(PlatformQrcodeCondition platformQrcodeCondition){
		CriteriaBuilder cb = Cnd.builder(PlatformQrcode.class);
		if(!Strings.isEmpty(platformQrcodeCondition.getId())){
			cb.andEQ("id", platformQrcodeCondition.getId());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getQrCode())){
			cb.andEQ("qrCode", platformQrcodeCondition.getQrCode());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getChannelNo())){
			cb.andEQ("channelNo", platformQrcodeCondition.getChannelNo());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getChannelName())){
			cb.andEQ("channelName", platformQrcodeCondition.getChannelName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getAgentNo())){
			cb.andEQ("agentNo", platformQrcodeCondition.getAgentNo());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getAgentName())){
			cb.andEQ("agentName", platformQrcodeCondition.getAgentName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getMerchantNo())){
			cb.andEQ("merchantNo", platformQrcodeCondition.getMerchantNo());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getMerchantName())){
			cb.andEQ("merchantName", platformQrcodeCondition.getMerchantName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getQrName())){
			cb.andEQ("qrName", platformQrcodeCondition.getQrName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getImage())){
			cb.andEQ("image", platformQrcodeCondition.getImage());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getQrDesc())){
			cb.andEQ("qrDesc", platformQrcodeCondition.getQrDesc());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getStoreId())){
			cb.andEQ("storeId", platformQrcodeCondition.getStoreId());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getStoreName())){
			cb.andEQ("storeName", platformQrcodeCondition.getStoreName());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getQrStatus())){
			cb.andEQ("qrStatus", platformQrcodeCondition.getQrStatus());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getRecordStatus())){
			cb.andEQ("recordStatus", platformQrcodeCondition.getRecordStatus());
		}
		if(null != platformQrcodeCondition.getCreateTime()){
			cb.andEQ("createTime", platformQrcodeCondition.getCreateTime());
		}

		if(!Strings.isEmpty(platformQrcodeCondition.getOperator())){
			cb.andEQ("operator", platformQrcodeCondition.getOperator());
		}

		if(!Strings.isEmpty(platformQrcodeCondition.getRemark())){
			cb.andLike("remark", platformQrcodeCondition.getRemark());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getTemp1())){
			cb.andEQ("temp1", platformQrcodeCondition.getTemp1());
		}
		if(!Strings.isEmpty(platformQrcodeCondition.getTemp2())){
			cb.andEQ("temp2", platformQrcodeCondition.getTemp2());
		}
		Criteria buildCriteria = cb.buildCriteria();
		return platformQrcodeDAO.findByCriteria(buildCriteria);
	}
	
	/**
	 * 主键查找
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public PlatformQrcode findById(String id){
		return platformQrcodeDAO.get(id);
	}
	
	/**
	 * 新增
	 * @param platformQrcodeCondition
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public long insert(PlatformQrcodeCondition platformQrcodeCondition){
		PlatformQrcode platformQrcode = new PlatformQrcode();
		BeanUtils.copyProperties(platformQrcodeCondition, platformQrcode);
		return platformQrcodeDAO.insert(platformQrcode);
	}

	/**
	 * 删除
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public long deleteById(String id){
		return platformQrcodeDAO.deleteById(id);
	}
	
	/**
	 * 条件删除
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public long deleteByCriteria(Criteria criteria){
		return platformQrcodeDAO.deleteByCriteria(criteria);
	}
	
	/**
	 * 行数汇总
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public long countByCriteria(Criteria criteria){
		return platformQrcodeDAO.countByCriteria(criteria);
	}
	
	/**
	 * 更新
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public long update(PlatformQrcodeCondition platformQrcodeCondition){
		PlatformQrcode platformQrcode = new PlatformQrcode();
		BeanUtils.copyProperties(platformQrcodeCondition, platformQrcode);
		return platformQrcodeDAO.update(platformQrcode);
	}
	
	/**
	 * 条件更新
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public long updateByCriteria(PlatformQrcodeCondition platformQrcodeCondition,Criteria criteria){
		PlatformQrcode platformQrcode = new PlatformQrcode();
		BeanUtils.copyProperties(platformQrcodeCondition, platformQrcode);
		return platformQrcodeDAO.updateByCriteria(platformQrcode,criteria);
	}
	
	/**
	 * 条件取当前代理商没有用过的二维码
	 *
	 * @author panq
	 * @date CreateDate : 2016-10-14 16:27:56
	 */
	@Override
	public PlatformQrcode findPlatformQrcode(String id) {
		return platformQrcodeDAO.findPlatformQrcode(id) ;
	}
	
}

